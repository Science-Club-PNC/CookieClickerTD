<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init position variables
stats_width = 0;
stats_max_width = 200;

stats_anim_state = 0;
stats_anim_speed = 0.04;

buy_height = 0;
buy_max_height = 100;

buy_open = false;
buy_anim_state = 0;
buy_anim_speed = 0.05;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init background surface
background_surf = -1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init buy buttons
buy_buttons = 0;
buy_buttons_x = 0;
buy_buttons_y = 0;
buy_buttons_amount = 7;

var b_size = 25;
var b_space = 5 + b_size;

var b_x = stats_max_width - 4*b_space;
var b_y = buy_max_height - 16 - 2*b_space;


for (var i = 0; i &lt; buy_buttons_amount; i++)
{
    if (i &lt; 6)
    {
        buy_buttons_x[i] = b_x + (i mod 3)*b_space;
        buy_buttons_y[i] = b_y + (i div 3)*b_space;
    }
    else
    {
        buy_buttons_x[i] = b_x + (3)*b_space;
        buy_buttons_y[i] = b_y + b_space/2;
    }
    with (instance_create(buy_buttons_x[i], buy_buttons_y[i], obj_button))
    {    
        parent_view = view_stats;
        
        width = b_size;
        height = b_size;
        
        other.buy_buttons[i] = id;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_selection_controller.selection_type == 0)
{
    if (stats_anim_state &gt; 0)
    {
        stats_anim_state = max(stats_anim_state - stats_anim_speed, 0);

        screen_set_stats_width(stats_max_width*stats_anim_state);
    }
}
else
{
    if (stats_anim_state &lt; 1)
    {
        stats_anim_state = min(stats_anim_state + stats_anim_speed, 1);

        screen_set_stats_width(stats_max_width*stats_anim_state);
    }
}

if (buy_open)
{
    if (buy_anim_state &lt; 1)
    {
        buy_anim_state = min(buy_anim_state + buy_anim_speed, 1);

        screen_set_buy_height(buy_max_height*buy_anim_state);
    }
}
else
{
    if (buy_anim_state &gt; 0)
    {
        buy_anim_state = max(buy_anim_state - buy_anim_speed, 0);

        screen_set_buy_height(buy_max_height*buy_anim_state);
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///free background surface
if surface_exists(background_surf)
{
    surface_free(background_surf);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create background surface
if !surface_exists(background_surf)
{
    var wview = view_wview[view_stats];
    var hview = view_hview[view_stats];
    
    background_surf = surface_create(wview, hview);
    surface_set_target(background_surf);
    
    draw_background_tiled(back_menu_background, 0, 0);
    
    {
        var wback = background_get_width(back_menu_vborder);
        var hback = background_get_height(back_menu_vborder);

        var ydraw = 0;
        
        do
        {
            draw_background_part(back_menu_vborder, 0, 0, wview, hview - ydraw, 0, ydraw);

            ydraw += hback;
        }
        until (ydraw &gt; hview)
    }
    
    
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
