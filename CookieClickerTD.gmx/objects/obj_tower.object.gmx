<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tower_base</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init tower settings

// ---- position data ----

//htile &amp; vtile
//the upper left tile the object is in
htile = 0
vtile = 0

// ---- tower core stats ----

//tower_type
//upgrade tree type of the tower
//0 = melee 
//1 = ranged
tower_type = 0;

//tower_class
//current class in upgrade tree
tower_class = 0;

//tower_size
//width and length in tiles;
tower_size = 1;

// ---- basic tower attack stats ----- 

//hit_damage
//damage per hit
hit_damage = 0;

//hit_range
//range in tiles within the tower can hit enemies
hit_range = 0;

//hit_speed
//shots per seconds
hit_speed = 0;

// ---- basic tower defence stats ----- 

//max_hitpoints
//amount of hitpoints when fully repaired
max_hitpoints = 0;
hitpoints = 0;

//armor_level
//amount of damage per hit inflicted to the tower reduced (cannot go below 1)
armor_level = 0; 

// ---- targeting stats ----

//can_target_ground
//can target ground enemies
can_target_ground = true;

//can_target_air
//can target air enemies
can_target_air = true;

//target_priority
//on what base to select what enemy to attack
//0 = nearest to king
//1 = lowest health
//2 = highest health
//3 = lowest armor
//4 = highest armor
//5 = strongest attack
//6 = groups
//7 = ground
//8 = flying
target_priority = 0;

// ---- attack stats ----

//splash_range
//the range of damage
splash_range = 0;

//splash_rolloff
//how the distance to the damage center affects the damage done ( damageDone = (hitDamage*(1 - (hitDistance/splashRange))^splashRolloff)) )
//0 = constant
//0...1 = exponential
//1 = liniar
//1... = exponential
splash_rolloff = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
